# BLOGIN YAML CONFIGURATION FILES

name: glogin
account: None

use_hyperthreading: False
choose_use_hyperthreading:
        "1":
                hyperthreading_flag: ""
        True:
                hyperthreading_flag: ""
        "0":
                hyperthreading_flag: "--ntasks-per-core=1"
        False:
                hyperthreading_flag: "--ntasks-per-core=1"

accounting: true

batch_system: "slurm"

jobtype: compute
sh_interpreter: "/bin/bash"

choose_jobtype:
        tidy_and_resubmit:
                partition: standard96
        post:
                partition: standard96
        compute:
                partition: standard96


choose_partition:
        standard96:
                cores_per_node: 96
        medium40:
                cores_per_node: 40

logical_cpus_per_core: 2

threads_per_core: 1

pool_directories:
        pool: "/scratch/usr/hbkawi"
        focipool: "/scratch/usr/shkifmsw/foci_input2"

pool_dir:  "/scratch/usr/hbkawi"

# default settings for compiler, mpi and I/O libs
# TODO: system_libs not yet properly configured as I (seb-wahl) don't use them
compiler_mpi: intel2019_impi2019
iolibraries: geomar_libs

# basic modules and export vars needed
# for all compiler and I/O settings
module_actions:
   - "purge"
   - "load slurm"
   - "load HLRNenv"
   - "load sw.skl"
   - "load cmake"
   - "load cdo nco"

export_vars:
   LC_ALL: en_US.UTF-8
   # Recommended by HLNR support when using an MPI binary and srun
   SLURM_CPU_BIND: none

choose_compiler_mpi:

   intel2019_impi2019:
      add_module_actions:
         - "load intel/19.0.5"
         - "load impi/2019.5"
      add_export_vars:
         FC: mpiifort
         F77: mpiifort
         MPIFC: mpiifort
         FCFLAGS: -free
         CC: mpiicc
         CXX: mpiicpc
         MPIROOT: "\"$(mpiifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpiifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""

   intel2019_ompi:
      add_module_actions:
         - "load intel/19.0.5"
         - "load openmpi/intel/3.1.6"
      add_export_vars:
         FC: mpifort
         F77: mpifort
         MPIFC: mpifort
         FCFLAGS: -free
         CC: mpicc
         CXX: mpic++
         MPIROOT: "\"$(mpifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""

choose_iolibraries:

    system_libs:
       # TODO: find the correct libraries and dependencies
       add_module_actions:
         - "load netcdf"
       # TODO: find the correct libraries and dependencies
       add_export_vars:
         NETCDF_DIR: /sw/dataformats/netcdf/intel.18/4.7.3/skl/
         LD_LIBRARY_PATH: $NETCDF_DIR/lib/:$LD_LIBRARY_PATH

    geomar_libs:
       choose_compiler_mpi:
          intel2019_impi2019:
             add_export_vars:
                IO_LIB_ROOT: /home/shkifmsw/sw/HPC_libraries/intel2019.0.5_impi2019.5_20200811
                PATH: $IO_LIB_ROOT/bin:$PATH
                LD_LIBRARY_PATH: $IO_LIB_ROOT/lib:$LD_LIBRARY_PATH

                SZIPROOT: $IO_LIB_ROOT
                HDF5ROOT: $IO_LIB_ROOT
                HDF5_ROOT: $HDF5ROOT
                NETCDFROOT: $IO_LIB_ROOT
                NETCDFFROOT: $IO_LIB_ROOT
                ECCODESROOT: $IO_LIB_ROOT

                HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
                NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
                NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include
                NETCDF_CXX_INCLUDE_DIRECTORIES: $NETCDFROOT/include
                OASIS3MCT_FC_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'

          intel2019_ompi:
             add_export_vars:
                IO_LIB_ROOT: /home/shkifmsw/sw/HPC_libraries/intel2019.0.5_ompi3.1.6_20201117
                PATH: $IO_LIB_ROOT/bin:$PATH
                LD_LIBRARY_PATH: $IO_LIB_ROOT/lib:$LD_LIBRARY_PATH

                SZIPROOT: $IO_LIB_ROOT
                HDF5ROOT: $IO_LIB_ROOT
                HDF5_ROOT: $HDF5ROOT
                NETCDFROOT: $IO_LIB_ROOT
                NETCDFFROOT: $IO_LIB_ROOT
                ECCODESROOT: $IO_LIB_ROOT

                HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
                NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
                NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include
                NETCDF_CXX_INCLUDE_DIRECTORIES: $NETCDFROOT/include
                OASIS3MCT_FC_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'

# some yamls use computer.fc, etc to identify the compiler, so we need to add them
fc: "$FC"
cc: "$CC"
mpifc: "$MPIFC"
mpicc: "$MPICC"
cxx: "$CXX"

launcher_flags: "--mpi=pmi2 -l --kill-on-bad-exit=1 --cpu_bind=cores --distribution=cyclic:cyclic --export=ALL"

further_reading:
        - batch_system/slurm.yaml
