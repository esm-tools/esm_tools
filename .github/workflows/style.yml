# GitHub Action that uses Black to reformat the Python code in an incoming pull request.
# If all Python code in the pull request is compliant with Black then this Action does nothing.
# Othewrwise, Black is run and its changes are committed back to the incoming pull request.

name: autoblack
on: [pull_request, push] # Do this always
jobs:
  style-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install Black
        run: pip install black
      - name: Run black --check .
        run: black --check .
      - name: If needed, commit black changes to the pull request
        if: failure()
        run: |
          echo "Hello there --> $BRANCH_NAME"
          echo "------------"
          env | sort
          echo "GITHUB_REF=${GITHUB_REF:-dev_why_not_defined}"
          # Probably a horrible idea, but whatever:
          echo "export GITHUB_REF_CLEAN=$(echo $GITHUB_REF | sed s#refs/heads/##); echo $GITHUB_REF_CLEAN"
          echo "Cleaned GITHUB_REF_CLEAN=${GITHUB_REF_CLEAN}
          echo "------------"
          black .
          git config --global user.name 'autoblack'
          git config --global user.email 'pgierz@awi.de'  # yes, I am taking credit for fixing your bad style. Deal with it.
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          echo "Hello there"
          git checkout $GITHUB_HEAD_REF
          echo "Finished checkout"
          git commit -am "fixup: Format Python code with Black"
          echo "Finished commit"
          echo "____________________________________________"
          echo "The CI knows this:"
          git branch
          git branch --show-current
          echo "GIT_BRANCH=${GIT_BRANCH}
          echo "____________________________________________"
          git push --set-upstream origin ${GITHUB_REF_CLEAN}
          echo "Finished push"

