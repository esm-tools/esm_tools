model: oasis3mct
#model_dir: ${esm_master_dir}/oasis
cf_name_dir: ${model_dir}
time_step: 900 # changed by coupled setup anyway

mct_version: 3.0
norestart: "F"
use_lucia: False

config_files:
        cf: cf

config_in_work:
        cf: "cf_name_table.txt"

config_sources:
        cf: "${cf_name_dir}/cf_name_table.txt"



log_files:
        nout: nout
        debug_r1: debug_r1
        debug_nr1: debug_nr1
        debug_r2: debug_r2
        debug_nr2: debug_nr2

log_sources:
        nout: nout.000000
        debug_r1: debug.root.01
        debug_nr1: debug_notroot.01
        debug_r2: debug.root.02
        debug_nr2: debug_notroot.02

log_in_work:
        nout: nout.000000
        debug_r1: debug.root.01
        debug_nr1: debug_notroot.01
        debug_r2: debug.root.02
        debug_nr2: debug_notroot.02

restart_out_files:
        areas: areas
        masks: masks
        grids: grids

restart_out_in_work:
        areas: areas.nc
        masks: masks.nc
        grids: grids.nc

restart_out_sources:
        areas: areas.nc
        masks: masks.nc
        grids: grids.nc

restart_in_files:
        areas: areas
        masks: masks
        grids: grids

restart_in_in_work:
        areas: areas.nc
        masks: masks.nc
        grids: grids.nc

restart_in_sources:
        areas: areas.nc
        masks: masks.nc
        grids: grids.nc



# transformations:
#
# time_transformation: instant / accumul / average / t_min / t_max
#
# preprocessing:
#       - checkin
#       - blasold:
#               xmult:
#               add_scalar: 0 / 1
#               scalar_to_add: (only if add_scalar == 1)
# remapping:
#       - mapping:
#               mapname: %filename with mapping matrix%
#               map_regrid_on: src / dst
#               mapstrategy:
#       - bilinear:
#               oasis_grid_type: LR / D / U, needs to be defined in model.yaml
#               search_bin: latitude / latlon
#               nb_of_search_bins: integer
#       - bicubic:
#               oasis_grid_type: LR / D / U, needs to be defined in model.yaml
#               search_bin: latitude / latlon
#               nb_of_search_bins: integer
#       - distwgt:
#               oasis_grid_type: LR / D / U, needs to be defined in model.yaml
#               search_bin: latitude / latlon
#               nb_of_search_bins: integer
#               nb_of_neighbours: integer
#       - gauswgt:
#               oasis_grid_type: LR / D / U, needs to be defined in model.yaml
#               search_bin: latitude / latlon
#               nb_of_search_bins: integer
#               nb_of_neighbours: integer
#               weigth: multiplicative weight, real
#      - conserv:
#               oasis_grid_type: LR / D / U, needs to be defined in model.yaml
#               search_bin: latitude / latlon
#               nb_of_search_bins: integer
#               normalization: fracarea / destarea / fracnnei
#               order: first / second
# postprocessing:
#       - checkout
#       - blasnew:
#               xmult:
#               add_scalar: 0 / 1
#               scalar_to_add: (only if add_scalar == 1)
#       - conserv:
#               method: GLOBAL / GLBPOS / BASBAL / BASPOS
#               algorithm:
#
#
