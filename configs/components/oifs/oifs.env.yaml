# Setup up compile and runtime environment i.e. what needs
# to be changed w.r.t the default config/machines/<computer>.yaml
#
#
# Setup up compile and runtime environment i.e. what needs
# to be changed w.r.t the default config/machines/<computer>.yaml


runtime_environment_changes:
  choose_computer.name:
    aleph:
      add_export_vars:
        GRIB_SAMPLES_PATH: '"$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2/"'
        DR_HOOK_IGNORE_SIGNALS: '${dr_hook_ignore_signals}'
        LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$ECCODESROOT/lib:$PROJ4_DIR/lib"
        PATH: "$ECCODESROOT/bin:${PATH}"

    blogin:
      add_module_actions:
        - "source $I_MPI_ROOT/intel64/bin/mpivars.sh release_mt"
      add_export_vars:
        - 'OIFS_FFIXED=""'
        - 'GRIB_SAMPLES_PATH="$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2/"' 
        - 'DR_HOOK_IGNORE_SIGNALS=${dr_hook_ignore_signals}'
        # OpenMP
        - 'OMP_SCHEDULE=STATIC'
        - 'OMP_STACKSIZE=128M'

    glogin:
      add_module_actions:
        - "source $I_MPI_ROOT/intel64/bin/mpivars.sh release_mt"
      add_export_vars:
        - 'OIFS_FFIXED=""'
        - 'GRIB_SAMPLES_PATH="$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2/"'
        - 'DR_HOOK_IGNORE_SIGNALS=${dr_hook_ignore_signals}'
        # OpenMP
        - 'OMP_SCHEDULE=STATIC'
        - 'OMP_STACKSIZE=128M'

    juwels:
      add_export_vars:
        - 'OIFS_FFIXED=""'
        - 'GRIB_SAMPLES_PATH="$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2/"'
        - 'DR_HOOK_IGNORE_SIGNALS=${dr_hook_ignore_signals}'
        # OpenMP
        - 'OMP_SCHEDULE=STATIC'
        - 'OMP_STACKSIZE=128M'
        - 'MAIN_LDFLAGS=-openmp'

    mistral:
      add_export_vars:
        GRIBAPIROOT: "${computer.GribApiRoot}"
        PATH[(2)]: "$GRIBAPIROOT/bin:${PATH}"
        UDUNITS2_ROOT: "/sw/rhel6-x64/util/udunits-2.2.26-gcc64"
        FFTW_ROOT: "/sw/rhel6-x64/numerics/fftw-3.3.7-openmp-gcc64"
        PROJ4_ROOT: "/sw/rhel6-x64/graphics/proj4-4.9.3-gcc48"
        PATH[(3)]: "/sw/rhel6-x64/gcc/binutils-2.24-gccsys/bin:${PATH}"
        LD_LIBRARY_PATH[(2)]: "$LD_LIBRARY_PATH:$GRIBAPIROOT/lib:$PROJ4_ROOT/lib:$FFTW_ROOT/lib"
        # ENV vars used in OIFS's source code during runtime
        OIFS_FFIXED: '""'
        GRIB_SAMPLES_PATH: '"$GRIBAPIROOT/share/${computer.GribSamples}/ifs_samples/grib1_mlgrib2/"'
        DR_HOOK_IGNORE_SIGNALS: '${dr_hook_ignore_signals}'
        # OpenMP
        MPI_BUFS_PER_PROC: '256'
        OMP_SCHEDULE: 'STATIC'
        OMP_STACKSIZE: '128M'

    levante:
      add_export_vars:
        #IO_LIB_ROOT: "/work/ab0246/HPC_libraries/intel-oneapi-compilers/2022.0.1-gcc-11.2.0/openmpi/4.1.2-intel-2021.5.0/"
        #LD_LIBRARY_PATH: $IO_LIB_ROOT/lib:$LD_LIBRARY_PATH

        SZIPROOT: "/sw/spack-levante/libaec-1.0.5-gij7yv"
        HDF5ROOT: "/sw/spack-levante/hdf5-1.12.1-tvymb5"
        HDF5_ROOT: $HDF5ROOT
        NETCDFROOT: "/sw/spack-levante/netcdf-c-4.8.1-2k3cmu"
        NETCDFFROOT: "/sw/spack-levante/netcdf-fortran-4.5.3-k6xq5g"
        ECCODESROOT: "/work/ab0246/HPC_libraries/intel-oneapi-compilers/2022.0.1-gcc-11.2.0/openmpi/4.1.2-intel-2021.5.0"

        PATH: "$ECCODESROOT/bin:$PATH"
        LD_LIBRARY_PATH[(3)]: "$ECCODESROOT/lib:$LD_LIBRARY_PATH"

        HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
        NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include

        OIFS_FFIXED: '""'
        GRIB_SAMPLES_PATH: '"$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2"'
        DR_HOOK_IGNORE_SIGNALS: '${dr_hook_ignore_signals}'
        # OpenMP changes
        OMP_SCHEDULE: STATIC
        OMP_STACKSIZE: 128M

    ollie:
      add_module_actions:
        - "unload gribapi"
        - "unload hdf5"
        - "unload intel.mpi"
        - "load intel.mpi/2021.3.0"
      add_export_vars:
        IO_LIB_ROOT: /work/ollie/jstreffi/software/HPC_libraries/intel2018.0.5_intelmpi_2021.3.0_20220623
        PATH[(2)]: "$PATH:$IO_LIB_ROOT/bin"
        LD_LIBRARY_PATH: $IO_LIB_ROOT/lib:$LD_LIBRARY_PATH

        SZIPROOT: $IO_LIB_ROOT
        HDF5ROOT: $IO_LIB_ROOT
        HDF5_ROOT: $HDF5ROOT
        NETCDFROOT: $IO_LIB_ROOT
        NETCDFFROOT: $IO_LIB_ROOT
        ECCODESROOT: $IO_LIB_ROOT

        HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
        NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include
        OASIS3MCT_FC_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'

        OIFS_FFIXED: '""'
        GRIB_SAMPLES_PATH: '"$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2"'
        DR_HOOK_IGNORE_SIGNALS: '${dr_hook_ignore_signals}'
        # OpenMP changes
        OMP_SCHEDULE: STATIC
        OMP_STACKSIZE: 128M

    nesh:
      compiler_mpi: intel2020_impi2020
      add_module_actions:
        - "source $I_MPI_ROOT/intel64/bin/mpivars.sh release_mt"
      add_export_vars:
        - 'OIFS_FFIXED=""'
        - 'GRIB_SAMPLES_PATH="$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2/"'
        - 'DR_HOOK_IGNORE_SIGNALS=${dr_hook_ignore_signals}'


compiletime_environment_changes:
  choose_computer.name:
    blogin:
      add_export_vars:
        - "LAPACK_LIB='-mkl=sequential'"
        - "LAPACK_LIB_DEFAULT='-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential'"
        # FFTW is included in MKL so we link to that
        - "OIFS_FFTW_DIR='-L$MKLROOT/lib/intel64'"
        - "OIFS_FFTW_INCLUDE='-I$OIFS_FFTW_DIR/include/'"
        - "OIFS_FFTW_LIB='-L$OIFS_FFTW_DIR/lib/ -lmkl_intel_lp64 -lmkl_core -lmkl_sequential'"
        # TODO: figure out whether those two are still needed
        - "ESM_NETCDF_C_DIR=$NETCDFROOT"
        - "ESM_NETCDF_F_DIR=$NETCDFFROOT"
        # grib api / eccodes
        - 'OIFS_GRIB_API_INCLUDE="-I$ECCODESROOT/include"'
        - 'OIFS_GRIB_API_LIB="-L$ECCODESROOT/lib -leccodes_f90 -leccodes"'
        - 'OIFS_GRIB_INCLUDE="$OIFS_GRIB_API_INCLUDE"'
        - 'OIFS_GRIB_LIB="$OIFS_GRIB_API_LIB"'
        - 'OIFS_GRIB_API_BIN="$ECCODESROOT/bin"'
        - 'LAPACK_LIB_DEFAULT="-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        # oasis
        - 'OIFS_OASIS_BASE=$(pwd)/oasis'
        - 'OIFS_OASIS_INCLUDE="-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        - 'OIFS_OASIS_LIB="-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        # netcdf
        - 'OIFS_NETCDF_INCLUDE="-I$NETCDFROOT/include"'
        - 'OIFS_NETCDF_LIB="-L$NETCDFROOT/lib -lnetcdf"'
        - 'OIFS_NETCDFF_INCLUDE="-I$NETCDFFROOT/include"'
        - 'OIFS_NETCDFF_LIB="-L$NETCDFFROOT/lib -lnetcdff"'
        # compilers and compile switches
        - 'OIFS_FC=$FC'
        - 'OIFS_FFLAGS="-qopenmp -r8 -fp-model precise -align array32byte -O1 -xCORE_AVX2 -g -traceback -convert big_endian -fpe0"'
        - 'OIFS_FFIXED=""'
        - 'OIFS_FCDEFS="BLAS LITTLE LINUX INTEGER_IS_INT"'
        - 'OIFS_LFLAGS="$OIFS_MPI_LIB -qopenmp"'
        - 'OIFS_CC=$CC'
        - 'OIFS_CFLAGS="-qopenmp -fp-model precise -O1 -xCORE_AVX2 -g -traceback -qopt-report=0 -fpe0"'
        - 'OIFS_CCDEFS="LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS"'

    glogin:
      add_export_vars:

        - "LAPACK_LIB='-mkl=sequential'"
        - "LAPACK_LIB_DEFAULT='-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential'"
        # FFTW is included in MKL so we link to that
        - "OIFS_FFTW_DIR='-L$MKLROOT/lib/intel64'"
        - "OIFS_FFTW_INCLUDE='-I$OIFS_FFTW_DIR/include/'"
        - "OIFS_FFTW_LIB='-L$OIFS_FFTW_DIR/lib/ -lmkl_intel_lp64 -lmkl_core -lmkl_sequential'"
        # TODO: figure out whether those two are still needed
        - "ESM_NETCDF_C_DIR=$NETCDFROOT"
        - "ESM_NETCDF_F_DIR=$NETCDFFROOT"
        # grib api / eccodes
        - 'OIFS_GRIB_API_INCLUDE="-I$ECCODESROOT/include"'
        - 'OIFS_GRIB_API_LIB="-L$ECCODESROOT/lib -leccodes_f90 -leccodes"'
        - 'OIFS_GRIB_INCLUDE="$OIFS_GRIB_API_INCLUDE"'
        - 'OIFS_GRIB_LIB="$OIFS_GRIB_API_LIB"'
        - 'OIFS_GRIB_API_BIN="$ECCODESROOT/bin"'
        - 'LAPACK_LIB_DEFAULT="-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        # oasis
        - 'OIFS_OASIS_BASE=$(pwd)/oasis'
        - 'OIFS_OASIS_INCLUDE="-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        - 'OIFS_OASIS_LIB="-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        # netcdf
        - 'OIFS_NETCDF_INCLUDE="-I$NETCDFROOT/include"'
        - 'OIFS_NETCDF_LIB="-L$NETCDFROOT/lib -lnetcdf -lnetcdff"'
        - 'OIFS_NETCDFF_INCLUDE="-I$NETCDFFROOT/include"'
        - 'OIFS_NETCDFF_LIB="-L$NETCDFFROOT/lib -lnetcdff"'
        # compilers and compile switches
        - 'OIFS_FC=$FC'
        - 'OIFS_FFLAGS="-qopenmp -r8 -fp-model precise -align array32byte -O1 -xCORE_AVX2 -g -traceback -convert big_endian -fpe0"'
        - 'OIFS_FFIXED=""'
        - 'OIFS_FCDEFS="BLAS LITTLE LINUX INTEGER_IS_INT"'
        - 'OIFS_LFLAGS="$OIFS_MPI_LIB -qopenmp"'
        - 'OIFS_CC=$CC'
        - 'OIFS_CFLAGS="-qopenmp -fp-model precise -O1 -xCORE_AVX2 -g -traceback -qopt-report=0 -fpe0"'
        - 'OIFS_CCDEFS="LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS"'

    juwels:
      add_export_vars:
        # TODO: figure out whether those two are still needed
        - "ESM_NETCDF_C_DIR=$NETCDFROOT"
        - "ESM_NETCDF_F_DIR=$NETCDFFROOT"
        # grib api / eccodes
        - 'OIFS_GRIB_API_INCLUDE="-I$ECCODESROOT/include"'
        - 'OIFS_GRIB_API_LIB="-L$ECCODESROOT/lib -leccodes_f90 -leccodes"'
        - 'OIFS_GRIB_INCLUDE="$OIFS_GRIB_API_INCLUDE"'
        - 'OIFS_GRIB_LIB="$OIFS_GRIB_API_LIB"'
        - 'OIFS_GRIB_API_BIN="$ECCODESROOT/bin"'
        - 'LAPACK_LIB_DEFAULT="-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        # oasis
        - 'OIFS_OASIS_BASE=$(pwd)/oasis'
        - 'OIFS_OASIS_INCLUDE="-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        - 'OIFS_OASIS_LIB="-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        # netcdf
        - 'OIFS_NETCDF_INCLUDE="-I$NETCDFROOT/include"'
        - 'OIFS_NETCDF_LIB="-L$NETCDFROOT/lib -lnetcdf"'
        - 'OIFS_NETCDFF_INCLUDE="-I$NETCDFFROOT/include"'
        - 'OIFS_NETCDFF_LIB="-L$NETCDFFROOT/lib -lnetcdff"'
        # compilers and compile switches
        - 'OIFS_FC=$FC'
        - 'OIFS_FFLAGS="-r8 -fp-model precise -align array32byte -O1 ${computer.OpenMP_flag} -xCORE_AVX2 -g -traceback -convert big_endian -fpe0"'
        - 'OIFS_FFIXED=""'
        - 'OIFS_FCDEFS="BLAS LITTLE LINUX INTEGER_IS_INT"'
        - 'OIFS_LFLAGS="$OIFS_MPI_LIB ${computer.OpenMP_flag}"'
        - 'OIFS_CC=$CC'
        - 'OIFS_CFLAGS="-fp-model precise -O3 -xCORE_AVX2 -g -traceback -qopt-report=0 -fpe0 ${computer.OpenMP_flag}"'
        - 'OIFS_CCDEFS="LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS ${computer.OpenMP_CCDEFS}"'
        - 'MAIN_LDFLAGS=-openmp'

    mistral:
      add_export_vars:
        MKLROOT: '/sw/rhel6-x64/intel/intel-18.0.4/compilers_and_libraries_2018/linux/mkl/lib/intel64/'
        LAPACK_LIB_DEFAULT[(1)]: '"-L$MKLROOT -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        ESM_NETCDF_C_DIR: "$NETCDFROOT"
        ESM_NETCDF_F_DIR: "$NETCDFFROOT"
        GRIBAPIROOT: "${computer.GribApiRoot}"
        GRIBROOT: "${computer.GribApiRoot}"
        UDUNITS2_ROOT: "/sw/rhel6-x64/util/udunits-2.2.26-gcc64"
        FFTW_ROOT: "/sw/rhel6-x64/numerics/fftw-3.3.7-openmp-gcc64"
        PROJ4_ROOT: "/sw/rhel6-x64/graphics/proj4-4.9.3-gcc48"
        #PETSC_DIR: "/sw/rhel6-x64/numerics/PETSc-3.12.2-impi2018-intel18/"
        PATH[(2)]: "/sw/rhel6-x64/gcc/binutils-2.24-gccsys/bin:${PATH}"
        LD_LIBRARY_PATH[(2)]: "$LD_LIBRARY_PATH:$GRIBAPIROOT/lib:$PROJ4_ROOT/lib:$FFTW_ROOT/lib:$SZIPROOT/lib"

        GRIB_SAMPLES_PATH: '"$GRIBAPIROOT/share/${computer.GribSamples}/ifs_samples/grib1_mlgrib2/"'
        PATH[(3)]: '$PATH:/mnt/lustre01/sw/rhel6-x64/devtools/fcm-2017.10.0/bin/'

        OIFS_GRIB_API_INCLUDE: '"-I$GRIBAPIROOT/include"'
        OIFS_GRIB_API_LIB: '"${computer.GribApiLib}"'
        # OIFS_GRIB_API_LIB is used by OpenIFS CY40, OIFS_GRIB_LIB is used by CY43
        OIFS_GRIB_INCLUDE: '"$OIFS_GRIB_API_INCLUDE"'
        OIFS_GRIB_LIB: '"$OIFS_GRIB_API_LIB"'
        OIFS_GRIB_API_BIN: '"$GRIBAPIROOT/bin"'
        OIFS_OASIS_BASE: '$(pwd)/oasis'
        OIFS_OASIS_INCLUDE: '"-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        OIFS_OASIS_LIB: '"-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        OIFS_NETCDF_INCLUDE: '"-I$NETCDFROOT/include"'
        OIFS_NETCDF_LIB: '"-L$NETCDFROOT/lib -lnetcdf"'
        OIFS_NETCDFF_INCLUDE: '"-I$NETCDFFROOT/include"'
        OIFS_NETCDFF_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'
        OIFS_FC: '$FC'
        OIFS_FFLAGS: '"-r8 -fp-model precise -align array32byte -O3 -qopenmp -xCORE_AVX2 -g -traceback -convert big_endian -fpe0"'
        #OIFS_FFLAGS: '"-r8 -fp-model precise -align array32byte -O0 -qopenmp -xCORE_AVX2 -g -traceback -convert big_endian -check all,noarg_temp_created,bounds -fpe0"'
        OIFS_FFIXED: '""'
        OIFS_FCDEFS: '"BLAS LITTLE LINUX INTEGER_IS_INT"'
        OIFS_LFLAGS: '"$OIFS_MPI_LIB -qopenmp"'
        OIFS_CC: '$CC'
        OIFS_CFLAGS: '"-fp-model precise -O3 -qopenmp -xCORE_AVX2 -g -traceback -qopt-report=0 -fpe0"'
        OIFS_CCDEFS: '"LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS"'
        # Build OpenIFS with FFTW. Use Intel MKL interfaces
        # WARNING: FFTW does not work yet. Wait for patch from ECMWF
        # OIFS_FFTW: '"enable"'
        OIFS_FFTW_DIR: '"$FFTW_ROOT"'
        OIFS_FFTW_INCLUDE: '"-I$OIFS_FFTW_DIR/include/"'
        OIFS_FFTW_LIB: '"-L$OIFS_FFTW_DIR/lib/ -lfftw3f"'
        DR_HOOK_IGNORE_SIGNALS: '${dr_hook_ignore_signals}'

    levante:
      add_module_actions:
        - "load libaec/1.0.5-intel-2021.5.0"
      add_export_vars:

        SZIPROOT: "/sw/spack-levante/libaec-1.0.5-gij7yv"
        HDF5ROOT: "/sw/spack-levante/hdf5-1.12.1-tvymb5"
        HDF5_ROOT: $HDF5ROOT
        NETCDFROOT: "/sw/spack-levante/netcdf-c-4.8.1-2k3cmu"
        NETCDFFROOT: "/sw/spack-levante/netcdf-fortran-4.5.3-k6xq5g"
        ECCODESROOT: "/work/ab0246/HPC_libraries/intel-oneapi-compilers/2022.0.1-gcc-11.2.0/openmpi/4.1.2-intel-2021.5.0"

        HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
        NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include
        OASIS3MCT_FC_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'
        # TODO: figure out whether those two are still needed
        ESM_NETCDF_C_DIR: "$NETCDFROOT"
        ESM_NETCDF_F_DIR: "$NETCDFFROOT"
        # grib api / eccodes
        OIFS_GRIB_API_INCLUDE: '"-I$ECCODESROOT/include"'
        OIFS_GRIB_API_LIB: '"-L$ECCODESROOT/lib64 -leccodes_f90 -leccodes"'
        OIFS_GRIB_INCLUDE: '"$OIFS_GRIB_API_INCLUDE"'
        OIFS_GRIB_LIB: '"$OIFS_GRIB_API_LIB"'
        OIFS_GRIB_API_BIN: '"$ECCODESROOT/bin"'
        LAPACK_LIB_DEFAULT: '"-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        # oasis
        OIFS_OASIS_BASE: '$(pwd)/oasis'
        OIFS_OASIS_INCLUDE: '"-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        OIFS_OASIS_LIB: '"-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        # netcdf
        OIFS_NETCDF_INCLUDE: '"-I$NETCDFROOT/include"'
        OIFS_NETCDF_LIB: '"-L$NETCDFROOT/lib -lnetcdf"'
        OIFS_NETCDFF_INCLUDE: '"-I$NETCDFFROOT/include"'
        OIFS_NETCDFF_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'
        # compilers and compile switches
        OIFS_FC: '$FC'
        OIFS_FFLAGS: '"-r8 -fp-model precise -align array32byte -O3 -qopenmp -g -traceback -convert big_endian -march=core-avx2 -mtune=core-avx2"' # -qoverride-limits -fast-transcendentals -m64  -fma -pc64"'
        #OIFS_FFLAGS: '"-r8 -fp-model precise -align array32byte -O0 -check all,noarg_temp_created,bounds,uninit -ftrapuv -qopenmp -g -traceback -convert big_endian -march=core-avx2 -mtune=core-avx2"' 
        OIFS_FFIXED: '""'
        OIFS_FCDEFS: '"BLAS LITTLE LINUX INTEGER_IS_INT"'
        OIFS_MPI_LIB: '"$MPI_LIB"'
        OIFS_LFLAGS: '"$OIFS_MPI_LIB -qopenmp"'
        OIFS_CC: '$CC'
        OIFS_CFLAGS: '"-fp-model precise -O3 -g -traceback -qopt-report=0 -fpe0 -qopenmp -march=core-avx2 -mtune=core-avx2"' # -qoverride-limits -fast-transcendentals -m64 -fma -pc64"'
        OIFS_CCDEFS: '"LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS _OPENMP"'

    ollie:
      add_module_actions:
        - "purge"
        - "load intel.mpi/2021.3.0 intel.compiler cmake"
      add_export_vars:
        IO_LIB_ROOT: /work/ollie/jstreffi/software/HPC_libraries/intel2018.0.5_intelmpi_2021.3.0_20220623
        LD_LIBRARY_PATH: $IO_LIB_ROOT/lib:$LD_LIBRARY_PATH

        SZIPROOT: $IO_LIB_ROOT
        HDF5ROOT: $IO_LIB_ROOT
        HDF5_ROOT: $HDF5ROOT
        NETCDFROOT: $IO_LIB_ROOT
        NETCDFFROOT: $IO_LIB_ROOT
        ECCODESROOT: $IO_LIB_ROOT

        HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
        NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include
        OASIS3MCT_FC_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'
        # TODO: figure out whether those two are still needed
        ESM_NETCDF_C_DIR: "$NETCDFROOT"
        ESM_NETCDF_F_DIR: "$NETCDFFROOT"
        # grib api / eccodes
        OIFS_GRIB_API_INCLUDE: '"-I$ECCODESROOT/include"'
        OIFS_GRIB_API_LIB: '"-L$ECCODESROOT/lib -leccodes_f90 -leccodes"'
        OIFS_GRIB_INCLUDE: '"$OIFS_GRIB_API_INCLUDE"'
        OIFS_GRIB_LIB: '"$OIFS_GRIB_API_LIB"'
        OIFS_GRIB_API_BIN: '"$ECCODESROOT/bin"'
        LAPACK_LIB_DEFAULT: '"-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        # oasis
        OIFS_OASIS_BASE: '$(pwd)/oasis'
        OIFS_OASIS_INCLUDE: '"-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        OIFS_OASIS_LIB: '"-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        # netcdf
        OIFS_NETCDF_INCLUDE: '"-I$NETCDFROOT/include"'
        OIFS_NETCDF_LIB: '"-L$NETCDFROOT/lib -lnetcdf"'
        OIFS_NETCDFF_INCLUDE: '"-I$NETCDFFROOT/include"'
        OIFS_NETCDFF_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'
        # compilers and compile switches
        OIFS_FC: '$FC'
        OIFS_FFLAGS: '"-r8 -fp-model precise -align array32byte -O3 -qopenmp -xCORE_AVX2 -g -traceback -convert big_endian"'
        OIFS_FFIXED: '""'
        OIFS_FCDEFS: '"BLAS LITTLE LINUX INTEGER_IS_INT"'
        OIFS_LFLAGS: '"$OIFS_MPI_LIB -qopenmp"'
        OIFS_CC: '$CC'
        OIFS_CFLAGS: '"-fp-model precise -O3 -xCORE_AVX2 -g -traceback -qopt-report=0 -fpe0 -qopenmp"'
        OIFS_CCDEFS: '"LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS _OPENMP"'

    aleph:
      add_export_vars:
        # grib api / eccodes
        OIFS_GRIB_API_INCLUDE: '"-I$ECCODESROOT/include"'
        OIFS_GRIB_API_LIB: '"-L$ECCODESROOT/lib -leccodes_f90 -leccodes"'
        OIFS_GRIB_INCLUDE: '"$OIFS_GRIB_API_INCLUDE"'
        OIFS_GRIB_LIB: '"$OIFS_GRIB_API_LIB"'
        OIFS_GRIB_API_BIN: '"$ECCODESROOT/bin"'
        GRIB_SAMPLES_PATH: '"$GRIBAPIROOT/share/grib_api/ifs_samples/grib1_mlgrib2/"'
        LD_LIBRARY_PATH: '$LD_LIBRARY_PATH:$ECCODESROOT/lib:$PROJ4_DIR/lib'
        # FFTW via module; lib names correct??
        OIFS_FFTW_INCLUDE: "'-I$FFTW_INC'"
        OIFS_FFTW_LIB: "'-L$FFTW_DIR -ldfftw -ldrfftw'"
        # oasis
        OIFS_OASIS_BASE: '$(pwd)/oasis'
        OIFS_OASIS_INCLUDE: '"-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        OIFS_OASIS_LIB: '"-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        OIFS_NETCDF_INCLUDE: '-I$NETCDF_DIR/include'
        OIFS_NETCDF_LIB: '"-L$NETCDF_DIR/lib -lnetcdf"'
        OIFS_NETCDFF_INCLUDE: '-I$NETCDF_DIR/include'
        OIFS_NETCDFF_LIB: '"-L$NETCDF_DIR/lib -lnetcdff"'
        OIFS_FC: '${computer.fc}'
        OIFS_FFLAGS: '"-O2 -emf -hthread1 -hflex_mp=conservative -hfp1 -hadd_paren -hbyteswapio -J./ -hcpu=x86-skylake -U_CRAYFTN"'   #TODO: Test: -O3 -hfp3
        #OIFS_FFLAGS: '"-O3 -emf -hthread3 -hflex_mp=conservative -hfp3 -hadd_paren -hbyteswapio -J./ -hcpu=x86-skylake -U_CRAYFTN"'   #TODO: Test: -O3 -hfp3
        OIFS_FFIXED: '"-s real64"'
        OIFS_FCDEFS: '"BLAS LITTLE LINUX INTEGER_IS_INT"'
        OIFS_LFLAGS: '"-dynamic -hbyteswapio"'
        OIFS_CC: '${computer.cc}'
        OIFS_CFLAGS: '"-emf -O2 -hcpu=x86-skylake"'
        #OIFS_CFLAGS: '"-emf -O3 -hcpu=x86-skylake"'
        OIFS_CCDEFS: '"LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS"'
        OIFS_XIOS_LIB_NAME: '${computer.c++_lib}'

    nesh:
      compiler_mpi: intel2020_impi2020
      add_export_vars:
        - "LAPACK_LIB='-mkl=sequential'"
        - "LAPACK_LIB_DEFAULT='-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential'"
        # FFTW is included in MKL so we link to that
        - "OIFS_FFTW_DIR='-L$MKLROOT/lib/intel64'"
        - "OIFS_FFTW_INCLUDE='-I$OIFS_FFTW_DIR/include/'"
        - "OIFS_FFTW_LIB='-L$OIFS_FFTW_DIR/lib/ -lmkl_intel_lp64 -lmkl_core -lmkl_sequential'"
        # TODO: figure out whether those two are still needed
        - "ESM_NETCDF_C_DIR=$NETCDFROOT"
        - "ESM_NETCDF_F_DIR=$NETCDFFROOT"
        # grib api / eccodes
        - 'OIFS_GRIB_API_INCLUDE="-I$ECCODESROOT/include"'
        - 'OIFS_GRIB_API_LIB="-L$ECCODESROOT/lib -leccodes_f90 -leccodes"'
        - 'OIFS_GRIB_INCLUDE="$OIFS_GRIB_API_INCLUDE"'
        - 'OIFS_GRIB_LIB="$OIFS_GRIB_API_LIB"'
        - 'OIFS_GRIB_API_BIN="$ECCODESROOT/bin"'
        - 'LAPACK_LIB_DEFAULT="-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        # oasis
        - 'OIFS_OASIS_BASE=$(pwd)/oasis'
        - 'OIFS_OASIS_INCLUDE="-I$OIFS_OASIS_BASE/build/lib/psmile -I$OIFS_OASIS_BASE/build/lib/psmile/scrip -I$OIFS_OASIS_BASE/build/lib/psmile/mct -I$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu"'
        - 'OIFS_OASIS_LIB="-L$OIFS_OASIS_BASE/build/lib/psmile -L$OIFS_OASIS_BASE/build/lib/psmile/scrip -L$OIFS_OASIS_BASE/build/lib/psmile/mct -L$OIFS_OASIS_BASE/build/lib/psmile/mct/mpeu -lpsmile -lmct -lmpeu -lscrip"'
        # netcdf
        - 'OIFS_NETCDF_INCLUDE="-I$NETCDFROOT/include"'
        - 'OIFS_NETCDF_LIB="-L$NETCDFROOT/lib -lnetcdf"'
        - 'OIFS_NETCDFF_INCLUDE="-I$NETCDFFROOT/include"'
        - 'OIFS_NETCDFF_LIB="-L$NETCDFFROOT/lib -lnetcdff"'
        # compilers and compile switches
        - 'OIFS_FC=$FC'
        - 'OIFS_FFLAGS="-r8 -fp-model precise -align array32byte -O1 -xCORE_AVX2 -g -traceback -convert big_endian -fpe0"'
        - 'OIFS_FFIXED=""'
        - 'OIFS_FCDEFS="BLAS LITTLE LINUX INTEGER_IS_INT"'
        - 'OIFS_LFLAGS=$OIFS_MPI_LIB'
        - 'OIFS_CC=$CC'
        - 'OIFS_CFLAGS="-fp-model precise -O1 -xCORE_AVX2 -g -traceback -qopt-report=0 -fpe0"'
        - 'OIFS_CCDEFS="LINUX LITTLE INTEGER_IS_INT _ABI64 BLAS"'

environment_changes:
  c++_lib: none
  GribApiRoot: none
  GribApiLib: none
  GribSamples: none
  OpenMP_flag: ""
  OpenMP_CCDEFS: ""
  #====================================================================================
  # MPI choice
  #====================================================================================
  choose_computer.useMPI:
    intelmpi:
      c++_lib: stdc++
      choose_computer.name:
        mistral:
          GribApiRoot: "/sw/rhel6-x64/grib_api/grib_api-1.15.0-intel14"
          GribApiLib: "-L$GRIBAPIROOT/lib -lgrib_api_f90 -lgrib_api"
          GribSamples: "grib_api"
    cray_mpich:
      c++_lib: cray-c++-rts
    openmpi:
      choose_computer.name:
        mistral:
          GribApiRoot: "/pf/a/a270092/ecmwf/grib_api_intel_modulegcc"
          GribApiLib: "-L$GRIBAPIROOT/lib -lgrib_api_f90 -lgrib_api"
          GribSamples: "grib_api"
          add_export_vars:
            DR_HOOK: 1
            DR_HOOK_OPT: prof
            DR_HOOK_PROFILE_LIMIT: 0.5
            OIFS_DUMMY_ACTION: ABORT
            HDF5_DISABLE_VERSION_CHECK: 1
    "*":
      c++_lib: none
