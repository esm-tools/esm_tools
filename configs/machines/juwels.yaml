# JUWELS YAML CONFIGURATION FILE

# basic setup
name: juwels
account: esmtst
jobtype: compute
accounting: true

# default settings for compiler, mpi and I/O libs
# make sure all setups have a compiler_mpi and iolibraries
compiler_mpi: None
iolibraries: None

# slurm setup
batch_system: slurm
logical_cpus_per_core: 2
threads_per_core: 1
launcher_flags: "-l "

# set default for hyperthreading_flag
hyperthreading_flag: ""


use_hyperthreading: False
choose_use_hyperthreading:
        "1":
                hyperthreading_flag: ""
        True:
                hyperthreading_flag: ""
        "0":
                hyperthreading_flag: "--ntasks-per-core=1"
        False:
                hyperthreading_flag: "--ntasks-per-core=1"

sh_interpreter: "/usr/bin/bash"

# pool directories
# TODO: cleanup the pool / focipool logic
pool_dir:  "/pool/data/not/available/on/juwels"
pool_directories:
        pool: "/pool/data/not/available/on/juwels"
        focipool: "/p/project/hirace/foci_input2"

# choose block
choose_jobtype:
        tidy_and_resubmit:
                partition: batch
        post:
                partition: batch
        compute:
                partition: batch

choose_partition:
        batch:
                cores_per_node: 48
        devel:
                cores_per_node: 48

# basic modules and export vars needed
# for all compiler and I/O settings
module_actions:
        - "--force purge"
        - "use $OTHERSTAGES" 

export_vars:
        LC_ALL: en_US.UTF-8
#<<<<<<< feature/awicm3_prep_merge_geomar
        TMPDIR: /tmp
#=======
        PROJECT: /p/project/hirace
#>>>>>>> geomar_awicm3

# choose compiler and MPI implementation
choose_compiler_mpi:

   intel2020_impi2020:
      add_module_actions:
        - "load Stages/2020"
        - "load Intel/2020.2.254-GCC-9.3.0"
        - "load IntelMPI/2019.8.254"
        - "load CMake/3.18.0"
        - "load Python/3.8.5"
        - "load imkl/2020.2.254"
        - "load netCDF-Fortran/4.5.3"
        - "load netCDF/4.7.4"
        - "load Perl/5.32.0"
      add_export_vars:
        FC: mpiifort
        F77: mpiifort
        MPIFC: mpiifort
        FCFLAGS: -free
        CC: mpiicc
        CXX: mpiicpc
        MPIROOT: "\"$($FC -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
        MPI_LIB: "\"$($FC -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $EBROOTNETCDFMINFORTRAN/include
        NETCDF_Fortran_LIBRARIES: $EBROOTNETCDFMINFORTRAN/lib
        ECCODESROOT: /p/project/chhb19/jstreffi/ecmwf/eccodes_intel2020_impi2020
        LD_LIBRARY_PATH: $ECCODESROOT/lib64:$LD_LIBRARY_PATH


   intel2020_psmpi2020:
      add_module_actions:
        - "load Stages/2020"
        - "load Intel/2020.2.254-GCC-9.3.0"
        - "load ParaStationMPI/5.4.7-1"
        - "load CMake/3.18.0"
        - "load Python/3.8.5"
        - "load imkl/2020.2.254"
        - "load netCDF-Fortran/4.5.3"
        - "load netCDF/4.7.4"
        - "load Perl/5.32.0"
      add_export_vars:
        FC: mpifort
        F77: mpifort
        MPIFC: mpifort
        FCFLAGS: -free
        CC: mpicc
        CXX: mpic++
        MPIROOT: "\"$(mpifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
        MPI_LIB: "\"$(mpifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $EBROOTNETCDFMINFORTRAN/include
        NETCDF_Fortran_LIBRARIES: $EBROOTNETCDFMINFORTRAN/lib
        ECCODESROOT: /p/project/chhb19/jstreffi/ecmwf/eccodes_intel2020_psi2020
        LD_LIBRARY_PATH: $ECCODESROOT/lib64:$LD_LIBRARY_PATH

   # Will be merged intel2020_impi2020
   intel2020_impi:
      add_module_actions:
         - "load Stages/2020"
         - "load Intel/2020.2.254-GCC-9.3.0"
         - "load IntelMPI/2019.8.254"
         - "load CMake"
         - "load Python/3.8.5"
         - "load imkl/2020.2.254"
      add_export_vars:
         FC: mpiifort
         F77: mpiifort
         MPIFC: mpiifort
         FCFLAGS: -free
         CC: mpiicc
         CXX: mpiicpc
         MPIROOT: "\"$(mpiifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpiifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""


   intel2020_impi_dev:
      add_module_actions:
         - "load Stages/Devel-2020"
         - "load Intel/2020.4.304-GCC-9.3.0"
         - "load IntelMPI/2019.8.254"
         - "load CMake"
         - "load Python/3.8.5"
         - "load imkl/2020.2.254"
         - "load UCX/1.9.0"
      add_export_vars:
         FC: mpiifort
         F77: mpiifort
         MPIFC: mpiifort
         FCFLAGS: -free
         CC: mpiicc
         CXX: mpiicpc
         MPIROOT: "\"$(mpiifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpiifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""

   intel2019_parastation:
      add_module_actions:
         - "load Stages/2019a"
         - "load Intel/2019.5.281-GCC-8.3.0"
         - "load ParaStationMPI/5.4.4-1-mt"
         - "load CMake"
         - "load Python/3.6.8"
         - "load imkl/2019.3.199"
      add_export_vars:
         FC: mpifort
         F77: mpifort
         MPIFC: mpifort
         FCFLAGS: -free
         CC: mpicc
         CXX: mpic++
         MPIROOT: "\"$(mpifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""

   intel2020_parastation:
      add_module_actions:
         - "load Stages/2020"
         - "load Intel/2020.2.254-GCC-9.3.0"
         - "load ParaStationMPI/5.4.7-1"
         - "load CMake"
         - "load Python/3.8.5"
         - "load imkl/2020.2.254"
         #TODO check if we need perl
         #- "load Perl/5.28.1"
      add_export_vars:
         FC: mpifort
         F77: mpifort
         MPIFC: mpifort
         FCFLAGS: -free
         CC: mpicc
         CXX: mpic++
         MPIROOT: "\"$(mpifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""

   intel2020_parastation_dev:
      add_module_actions:
         - "load Stages/Devel-2020"
         - "load Intel/2020.4.304-GCC-9.3.0"
         - "load ParaStationMPI/5.4.7-1-mt"
         - "load CMake"
         - "load Python/3.8.5"
         - "load imkl/2020.2.254"
      add_export_vars:
         FC: mpifort
         F77: mpifort
         MPIFC: mpifort
         FCFLAGS: -free
         CC: mpicc
         CXX: mpic++
         MPIROOT: "\"$(mpifort -show | perl -lne 'm{ -I(.*?)/include } and print $1')\""
         MPI_LIB: "\"$(mpifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')\""

choose_iolibraries:

    system_libs:
       # TODO: find the correct libraries and dependencies
       add_module_actions:
         - "load netCDF"
    geomar_libs:
       add_export_vars:
                IO_LIB_ROOT: EMPTY
                PATH: $IO_LIB_ROOT/bin:$PATH
                LD_LIBRARY_PATH: $IO_LIB_ROOT/lib:$LD_LIBRARY_PATH

                SZIPROOT: $IO_LIB_ROOT
                HDF5ROOT: $IO_LIB_ROOT
                HDF5_ROOT: $HDF5ROOT
                NETCDFROOT: $IO_LIB_ROOT
                NETCDFFROOT: $IO_LIB_ROOT
                ECCODESROOT: $IO_LIB_ROOT

                HDF5_C_INCLUDE_DIRECTORIES: $HDF5_ROOT/include
                NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFFROOT/include
                NETCDF_C_INCLUDE_DIRECTORIES: $NETCDFROOT/include
                NETCDF_CXX_INCLUDE_DIRECTORIES: $NETCDFROOT/include
                OASIS3MCT_FC_LIB: '"-L$NETCDFFROOT/lib -lnetcdff"'

       choose_compiler_mpi:
          intel2019_impi2019:
             add_export_vars:
                IO_LIB_ROOT: $PROJECT/HPC_libraries/intel2019.3.199_impi2019.6.154_20200703

          intel2020_impi:
             add_export_vars:
                IO_LIB_ROOT: $PROJECT/HPC_libraries/intel2020.2.254_impi2019.8.254_20210427
                
          intel2020_impi_dev:
             add_export_vars:
                IO_LIB_ROOT: $PROJECT/HPC_libraries/intel2020.4.304_impi2019.8.254_20210427
                
          intel2019_parastation:
             add_export_vars:
                IO_LIB_ROOT: $PROJECT/HPC_libraries/intel2019.5.281_parastation_5.4.4-1-mt_20201113

          intel2020_parastation:
             add_export_vars:
                IO_LIB_ROOT: $PROJECT/HPC_libraries/intel2020.2.254_parastation_5.4.7-1_20210427

          intel2020_parastation_dev:
             add_export_vars:
                IO_LIB_ROOT: $PROJECT/HPC_libraries/intel2020.4.304_parastation_5.4.7-1-mt_20210427

       #add_export_vars:
# some yamls use computer.fc, etc to identify the compiler, so we need to add them
fc: "$FC"
cc: "$CC"
mpifc: "$MPIFC"
mpicc: "$MPICC"
cxx: "$CXX"

further_reading:
        - batch_system/slurm.yaml

